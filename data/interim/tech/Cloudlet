<!--- Don't mess with this line! ---><!--- Write your article below this line --->A cloudlet is a mobility-enhanced small-scale Cloud computing|cloud datacenter that is located at the edge of the Internet. The main purpose of the cloudlet is supporting resource-intensive and interactive mobile applications by providing powerful computing resources to mobile devices with lower latency. It is a new architectural element that extends today’s cloud computing infrastructure. It represents the middle tier of a 3-tier hierarchy:  mobile ''device - cloudlet - cloud''.   A cloudlet can be viewed as a ''data center in a box'' whose goal is to ''bring the cloud closer''.  The cloudlet term was first coined by M. Satyanarayanan, Victor Bahl, Ramón Cáceres, and Nigel Davies,<ref>cite web|url=http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5280678&tag=1|title=The Case for VM-Based Cloudlets in Mobile Computing|publisher=IEEE</ref> and a prototype implementation is developed by Carnegie Mellon University as a research project.<ref name=Elijah-cloudlet>cite web|url=http://elijah.cs.cmu.edu/|title=Elijah: Cloudlet-based Mobile Computing|publisher=Carnegie Mellon University</ref> The concept of cloudlet is also known as follow me cloud,<ref>cite web|url=https://www.researchgate.net/profile/Adlen_Ksentini/publication/260352893_Follow_me_cloud_interworking_federated_clouds_and_distributed_mobile_networks/links/5507f00c0cf26ff55f7f832b.pdf|title=Follow Me Cloud: Interworking Federated Clouds & Distributed Mobile Networks|publisher=IEEE Network Magazine</ref> and mobile micro-cloud.<ref>cite web|url=http://www.commsp.ee.ic.ac.uk/~sw4410/papers/SW_MILCOM2015.pdf|title=Emulation-Based Study of Dynamic Service Placement in Mobile Micro-Clouds|publisher=IEEE MILCOM 2015</ref>

TOC limit

Motivation
Many mobile services split the application into Front and back ends|a front-end client program and Front and back ends|a back-end server program following the traditional Client–server model|client-server model. The front-end mobile application offloads its functionality to the back-end servers for various reasons such as speeding up processing. With the advent of cloud computing, the back-end server is typically hosted at the Cloud computing|cloud datacenter. Though the use of a cloud datacenter offers various benefits such as scalability and elasticity, its Cloud computing#Characteristics|consolidation and centralization lead to a large separation between a mobile device and its associated datacenter. End-to-end communication then involves many network hops and results in high latencies and low bandwidth.

For the reasons of latency, some cloudlet#Applications|emerging mobile applications require cloud offload infrastructure to be close to the mobile device to achieve low response time.<ref>cite web|url=http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6529281&tag=1|title=The Impact of Mobile Multimedia Applications on Data Center Consolidation|publisher=IEEE</ref> In the ideal case, it is just one wireless hop away. For example, the offload infrastructure could be located in a cellular base station or it could be LAN-connected to a set of Wi-Fi base stations. The individual elements of this offload infrastructure are referred to as cloudlets.

Applications
Cloudlets aim to support mobile applications that are both resource-intensive and interactive. Augmented reality|Augmented reality applications that use head-tracked systems require end-to-end latencies of less than 16 ms.<ref>cite web|url=http://pro.sagepub.com/content/48/23/2632.short|title=Generalizeability of Latency Detection in a Variety of Virtual Environments</ref> Cloud gaming|Cloud games with remote rendering also require low latencies and high bandwidth.<ref>cite web|url=http://research.microsoft.com/pubs/226843/outatime_techreport2014.pdf|title=Outatime: Using Speculation to Enable Low-Latency Continuous Interaction for Cloud Gaming|publisher=Microsoft</ref> Wearable cognitive assistance system combines a device like Google Glass with cloud-based processing to guide a user through a complex task. This futuristic genre of applications is characterized as “astonishingly transformative” by the report of the 2013 NSF Workshop on Future Directions in Wireless Networking.<ref>cite web|url=http://dl.acm.org/citation.cfm?id=2747468|title=Final report from the NSF Workshop on Future Directions in Wireless Networking|publisher=National Science Foundation</ref> These applications use cloud resources in the critical path of real-time user interaction. Consequently, they cannot tolerate end-to-end operation latencies of more than a few tens of milliseconds. Apple Siri and Google Now which perform compute-intensive speech recognition in the cloud, are further examples in this emerging space.

Cloudlet vs Cloud computing|Cloud
There is significant overlap in the requirements for cloud and cloudlet. At both levels, there is the need for: (a) strong isolation between untrusted user-level computations; (b) mechanisms for authentication, access control, and metering; (c) dynamic resource allocation for user-level computations; and, (d) the ability to support a very wide range of user-level computations, with minimal restrictions on their process structure, programming languages or operating systems. At a cloud datacenter, these requirements are met today using the virtual machine (VM) abstraction. For the same reasons they are used in cloud computing today, VMs are used as an abstraction for cloudlets. Meanwhile, there are a few but important differentiators between cloud and cloudlet. See also|Cloud computing#Service models

=Rapid provisioning=
Different from cloud data centers that are optimized for launching existing VM images in their storage tier, cloudlets need to be much more agile in their provisioning. Their association with mobile devices is highly dynamic, with considerable churn due to user mobility. A user from far away may unexpectedly show up at a cloudlet (e.g., if he just got off an international flight) and try to use it for an application such as a personalized language translator. For that user, the provisioning delay before he is able to use the application impacts usability.<ref>cite web|url=http://dl.acm.org/citation.cfm?id=2464451|title=Just-in-time provisioning for cyber foraging|publisher=ACM</ref>

=VM handoff across cloudlets=
If a mobile device user moves away from the cloudlet he is currently using, the interactive response will degrade as the logical network distance increases. To address this effect of user mobility, the offloaded services on the first cloudlet need to be transferred to the second cloudlet maintaining end-to-end network quality.<ref>cite web|url=http://www.commsp.ee.ic.ac.uk/~sw4410/papers/WS_Networking2015.pdf|title=Dynamic Service Migration in Mobile Edge-Clouds|publisher=IFIP Networking 2015</ref> This resembles live migration in cloud computing but differs considerably in a sense that the VM handoff happens in Wide Area Network (WAN).

OpenStack++
Since the cloudlet model requires reconfiguration or additional deployment of hardware/software, it is important to provide a systematic way to incentivise the deployment. However, it can face a classic bootstrapping problem. Cloudlets need practical applications to incentivize cloudlet deployment. However, developers cannot heavily rely on cloudlet infrastructure until it is widely deployed. To break this deadlock and bootstrap the cloudlet deployment, researchers at Carnegie Mellon University proposed OpenStack++ that extends OpenStack to leverage its open ecosystem.<ref name= Elijah-cloudlet /> OpenStack++ provides a set of cloudlet-specific API as OpenStack extensions.<ref>cite web|url= https://github.com/cmusatyalab/elijah-cloudlet|title=Open Source Repository for Elijah-cloudlet</ref>

Commercial implementations and standardization effort
By 2015 cloudlet based applications were commercially available.<ref>cite journal|last1=Pang|first1=Z.|last2=Sun|first2=L.|last3=Wang|first3=Z.|last4=Tian|first4=E.|last5=Yang|first5=S.|title=A Survey of Cloudlet Based Mobile Computing|journal=2015 International Conference on Cloud Computing and Big Data (CCBD)|date=2015|pages=268–275|doi=10.1109/CCBD.2015.54</ref>

In 2017 the National Institute of Standards and Technology published draft standards for fog computing in which cloudlets were defined as nodes on the fog architecture.<ref>cite web|title=The NIST Definition of Fog Computing|url=https://csrc.nist.gov/csrc/media/publications/sp/800-191/draft/documents/sp800-191-draft.pdf|website=nist.gov</ref>

See also
* Mobile cloud computing
* [http://elijah.cs.cmu.edu/ Elijah-cloudlet project]

References
reflist

<!--- After listing your sources please cite them using inline citations and place them after the information they cite. Please see http://en.wikipedia.org/wiki/Wikipedia:REFB for instructions on how to add citations. --->
*
*
*
*

<!--- STOP! Be warned that by using this process instead of Articles for Creation, this article is subject to scrutiny. As an article in "mainspace", it will be DELETED if there are problems, not just declined. If you wish to use AfC, please return to the Wizard and continue from there. --->

Category:Post-cloud computing architecture
Category:Cloud computing